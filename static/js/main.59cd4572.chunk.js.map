{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/transformEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","transformEvents","end","moment","toDate","start","eventAddNew","event","eventClearActive","eventUpdated","eventDeleted","eventLoaded","login","user","startLogout","dispatch","clear","logout","checkingFinish","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rEmail","rName","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowEnd","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onSelectEvent","onView","onDoubleClickEvent","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"kMAAaA,EACK,kBADLA,EAEK,mBAFLA,EAIQ,kBAJRA,EAMQ,qBANRA,EAOQ,uBAPRA,EAQK,wBARLA,EASK,wBATLA,EAUI,wBAVJA,EAWI,wBAXJA,EAaa,uCAbbA,EAeE,eAfFA,EAkBG,gBChBVC,EAAe,CACjBC,UAAU,G,QCARD,EAAe,CACjBE,OAAQ,GACRC,YAAa,MCHXH,EAAe,CACjBI,WAAW,GCEFC,EAAcC,YAAgB,CACvCC,GDAqB,WAAkC,IAAjCC,EAAgC,uDAAxBR,EAAcS,EAAU,uCACtD,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAEnB,KAAKL,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAEnB,QACI,OAAOI,ICZfG,SFa2B,WAAmC,IAAlCH,EAAiC,uDAAzBR,EAAcS,EAAW,uCAC7D,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIL,YAAaM,EAAOG,UAE5B,KAAKb,EACD,kCACOS,GADP,IAEIN,OAAO,GAAD,mBACCM,EAAMN,QADP,CAEFO,EAAOG,YAGnB,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIL,YAAa,OAErB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOW,KACjB,SAAAC,GAAC,OAAKA,EAAEC,KAAON,EAAOG,QAAQG,GAAMN,EAAOG,QAAUE,OAGjE,KAAKf,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOc,QACjB,SAAAF,GAAC,OAAKA,EAAEC,KAAOP,EAAML,YAAYY,MAErCZ,YAAa,OAErB,KAAKJ,EACD,kCACOS,GADP,IAEIN,OAAO,YAAKO,EAAOG,WAE3B,KAAKb,EACD,sBACOC,GAEX,QACI,OAAOQ,IEzDfS,KHAuB,WAAmC,IAAjCT,EAAgC,uDAAzBR,EAAcS,EAAW,uCACzD,OAAQA,EAAOC,MACX,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIP,UAAU,GACPQ,EAAOG,SAElB,KAAKb,EACD,kCACOS,GADP,IAEIP,UAAU,IAElB,KAAKF,EACD,MAAM,CACFE,UAAU,GAElB,QACI,OAAOO,M,QItBbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAgBC,O,0DCTlBC,EAAUC,6CAEVC,EAAgB,SAACC,EAAUC,GAAyB,IAAnBC,EAAkB,uDAAT,MACtCC,EAAG,UAAMN,EAAN,YAAiBG,GAC1B,MAAc,QAAXE,EACQE,MAAMD,GAENC,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAK5BQ,EAAgB,SAACT,EAAUC,GAAyB,IAAnBC,EAAkB,uDAAT,MACtCC,EAAG,UAAMN,EAAN,YAAiBG,GACpBU,EAAQC,aAAaC,QAAQ,UAAY,GAC/C,MAAc,QAAXV,EACQE,MAAMD,EAAI,CACbD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAMD,EAAI,CACbD,SACAG,QAAQ,CACJ,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,M,iBChCrBY,EAAkB,WAAiB,IAAhBxC,EAAe,uDAAN,GAErC,OAAOA,EAAOW,KACV,SAACC,GAAD,mBAAC,eACMA,GADP,IAEI6B,IAAKC,IAAO9B,EAAE6B,KAAKE,SACnBC,MAAOF,IAAO9B,EAAEgC,OAAOD,eCoB7BE,EAAc,SAACC,GAAD,MAAU,CAC1BtC,KAAMX,EACNa,QAASoC,IAOAC,EAAmB,iBAAK,CAACvC,KAAMX,IAmBtCmD,EAAe,SAACF,GAAD,MAAU,CAC3BtC,KAAMX,EACNa,QAASoC,IAoBPG,EAAe,iBAAK,CAACzC,KAAMX,IAe3BqD,EAAc,SAAElD,GAAF,MAAe,CAC/BQ,KAAMX,EACNa,QAASV,ICvEPmD,EAAQ,SAACC,GAAD,MAAW,CACrB5C,KAAMX,EACNa,QAAS0C,IAGAC,EAAc,WACvB,OAAO,SAACC,GACJhB,aAAaiB,QACbD,EDkE0B,CAAC9C,KAAMX,ICjEjCyD,EAASE,OAIXA,EAAS,iBAAO,CAAChD,KAAMX,IAyCvB4D,EAAiB,iBAAO,CAAEjD,KAAMX,I,gBC5EzB6D,EAAU,WAA0B,IAAxB5D,EAAuB,uDAAR,GAEpC,EAA4B6D,mBAAS7D,GAArC,mBAAO8D,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAW/D,IAGTiE,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBH,EAAU,2BACHD,GADE,kBAEHI,EAAOC,KAAQD,EAAOE,UAKhC,MAAO,CAAEN,EAAQG,EAAmBD,I,gBCZ3BK,GAAc,WAMvB,IAAMb,EAAWc,cAEjB,EAAoDV,EAAQ,CACxDW,OAAQ,GACRC,UAAW,KAFf,mBAAQC,EAAR,KAAyBC,EAAzB,KAKA,EAA0Dd,EAAQ,CAK9De,OAAQ,GACRC,MAAO,GACPC,WAAY,GACZC,WAAY,KARhB,mBAAQC,EAAR,KAA4BC,EAA5B,KAWOT,EAAqBE,EAArBF,OAAQC,EAAaC,EAAbD,UAEPG,EAA0CI,EAA1CJ,OAAQC,EAAkCG,EAAlCH,MAAOC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAenC,OACQ,sBAAKG,UAAU,4BAAf,SACI,uBAAKA,UAAU,MAAf,UACI,uBAAKA,UAAU,wBAAf,UACI,0CACA,wBAAMC,SAlBN,SAACpE,GF9BC,IAACqE,EAAOC,EE+B1BtE,EAAEuE,iBACF7B,GFhCmB2B,EEgCCZ,EFhCMa,EEgCCZ,EF/B/B,uCAAO,WAAMhB,GAAN,iBAAA8B,EAAA,sEACgB1D,EAAc,OAAO,CAACuD,QAAOC,YAAU,QADvD,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIKsD,IACJjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAM,CACXwC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAGf2B,IAAKC,KAAK,QAAQ5D,EAAK6D,IAAI,SAb5B,2CAAP,yDE+CoB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQG,EACR2B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAQI,EACR0B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,eAIlB,uBAAKa,UAAU,SAAf,UACI,8FAC2D,wBAAS,2BAEpE,8CAJJ,wBAIiD,wBAC7C,qDALJ,mBASJ,uBAAKA,UAAU,wBAAf,UACI,2CACA,wBAAMC,SArDH,SAACpE,GAEpB,GADAA,EAAEuE,iBACER,IAAeC,EACf,OAAOgB,IAAKC,KAAK,QAAS,kCAAgC,SFJzC,IAAEZ,EAAOhB,EAAMiB,EEMpC5B,GFNuB2B,EEMAR,EFNOR,EEMCS,EFNKQ,EEMEP,EFL1C,uCAAO,WAAMrB,GAAN,iBAAA8B,EAAA,sEACgB1D,EAAc,WAAW,CAACuD,QAAOhB,OAAMiB,YAAU,QADjE,cACGG,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIKsD,IACJjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAM,CACXwC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAGf2B,IAAKC,KAAK,QAAQ5D,EAAK6D,IAAI,SAb5B,2CAAP,yDEqDoB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,QACLC,MAASQ,EACTsB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,QACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAASO,EACTuB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,aACLC,MAASS,EACTqB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,0BACZ9B,KAAK,aACLC,MAASU,EACToB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,+BCvI7B+B,GAAS,WAElB,IAAOhC,EAAQiC,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAnCkD,KACDX,EAAWc,cAMjB,OACI,uBAAKW,UAAU,kCAAf,UACI,uBAAMA,UAAU,eAAhB,SACKd,IAEL,0BAAQc,UAAU,yBAAyBoB,QAT9B,WACjB7C,EAASD,MAQL,UACI,oBAAG0B,UAAU,wBACb,kD,SCnBHqB,GAAgB,SAAC,GAAe,IAAbtD,EAAY,EAAZA,MACpBuD,EAAevD,EAAfuD,MAAOjD,EAAQN,EAARM,KACf,OACI,iCACI,kCAAUiD,IACV,uCAAUjD,EAAKa,Y,wCCLdqC,GAAe,iBAAO,CAAE9F,KAAMX,ICOrC0G,GAAe,CACjBC,QAAS,CACLC,IAAK,MACLC,KAAM,MACNC,MAAO,OACPC,OAAQ,OACRC,YAAa,OACbC,UAAW,0BAInBC,KAAMC,cAAc,SAEpB,IAAMC,GAAMvE,MAASwE,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAE,QAC3CC,GAASJ,GAAIK,QAAQF,IAAI,EAAG,SAE5BG,GAAY,CACdlB,MAAO,GACPmB,MAAO,GACP5E,MAAOqE,GAAItE,SACXF,IAAK4E,GAAO1E,UAGH8E,GAAgB,WAEzB,IAAMnE,EAAWc,cACVlE,EAAagG,aAAY,SAAA5F,GAAK,OAAIA,EAAMD,MAAxCH,UACAD,EAAeiG,aAAY,SAAA5F,GAAK,OAAIA,EAAMG,YAA1CR,YAEP,EAAkC0D,mBAASsD,GAAItE,UAA/C,mBAAO+E,EAAP,KAAkBC,EAAlB,KACA,EAA8BhE,mBAAS0D,GAAO1E,UAA9C,mBAAOiF,EAAP,KAAgBC,EAAhB,KAEA,EAAoClE,oBAAS,GAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KAEA,EAAoCpE,mBAAS4D,IAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEO5B,EAA4B2B,EAA5B3B,MAAOmB,EAAqBQ,EAArBR,MAAO5E,EAAcoF,EAAdpF,MAAOH,EAAOuF,EAAPvF,IAE5ByF,qBAAU,WAEFD,EADAhI,GAGcsH,MAEnB,CAACtH,EAAagI,IAEjB,IAAMlE,EAAoB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACxBiE,EAAc,2BACPD,GADM,kBAERhE,EAAOC,KAAQD,EAAOE,UAIzBiE,EAAa,WACf7E,ED5D2B,CAAE9C,KAAMX,IC6DnCyD,EAASP,KACTkF,EAAcV,KAyClB,OACQ,gBAAC,KAAD,CACIa,OAAQlI,EAERmI,eAAgBF,EAChBG,MAAO/B,GACPgC,eAAgB,IAChBxD,UAAU,QACVyD,iBAAiB,cAPrB,UASI,oCAAOvI,EAAc,gBAAiB,eAAtC,OACA,wBACA,wBAAM8E,UAAU,YAAYC,SAlCf,SAACpE,GACtBA,EAAEuE,iBACF,IP9CyBrC,EO8CnB2F,EAAc/F,IAAOE,GACrB8F,EAAYhG,IAAOD,GAEzB,OAAIgG,EAAYE,cAAcD,GACnB9C,IAAKC,KAAK,QAAS,uDAAwD,SAGlFQ,EAAMuC,OAAOC,OAAS,EACfd,GAAc,IAIrBzE,EADArD,GPzDqB6C,EO0DKkF,EPzDlC,uCAAO,WAAM1E,GAAN,iBAAA8B,EAAA,+EAEoBhD,EAAc,UAAD,OAAWU,EAAMjC,IAAKiC,EAAM,OAF7D,cAEOuC,EAFP,gBAGoBA,EAAKC,OAHzB,QAGOrD,EAHP,QAIUsD,GACLjC,EAASN,EAAaF,IAEtB8C,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAPlC,kDAUCgD,QAAQC,IAAR,MAVD,0DAAP,uDApC4B,SAACjG,GAC7B,8CAAO,WAAMQ,EAAS0F,GAAf,uBAAA5D,EAAA,+DAEmB4D,IAAWjI,KAAzB4E,EAFL,EAEKA,IAAK1B,EAFV,EAEUA,KAFV,kBAKoB7B,EAAc,SAASU,EAAO,QALlD,cAKOuC,EALP,gBAMoBA,EAAKC,OANzB,QAMOrD,EANP,QAQUsD,KACLzC,EAAMjC,GAAKoB,EAAKgH,OAAOpI,GACvBiC,EAAMM,KAAO,CACT8F,IAAKvD,EACL1B,KAAMA,GAEVX,EAAST,EAAYC,KAd1B,kDAiBCgG,QAAQC,IAAR,MAjBD,0DAAP,wDO8FiBI,CAAiBnB,IAE9BD,GAAc,QACdI,MAeQ,UACI,uBAAKpD,UAAU,aAAf,UACI,yDACA,eAAC,KAAD,CACIiB,SAtDM,SAACpF,GAC3B+G,EAAa/G,GACbqH,EAAc,2BACPD,GADM,IAETpF,MAAOhC,MAmDUsD,MAAOwD,EACP3C,UAAW,oBAIpB,uBAAKA,UAAU,aAAf,UACI,sDACA,eAAC,KAAD,CACIiB,SAvDI,SAACpF,GACzBiH,EAAWjH,GACXqH,EAAc,2BACPD,GADM,IAETvF,IAAK7B,MAoDYsD,MAAO0D,EACPwB,QAAU1B,EACV3C,UAAW,oBAGpB,wBACA,uBAAKA,UAAU,aAAf,UACI,oDACA,wBACIvE,KAAK,OACLuE,UAAS,wBAAmB+C,GAAc,cAC1C/B,YAAY,uBACZ9B,KAAK,QACLC,MAASmC,EACTL,SAAUjC,EACVsF,aAAa,QAEjB,wBAAOxI,GAAG,YAAYkE,UAAU,uBAAhC,yCAGJ,uBAAKA,UAAU,aAAf,UACI,2BACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,QACZuD,KAAK,IACLpF,MAASsD,EACTxB,SAAUjC,EACVE,KAAK,UAET,wBAAOpD,GAAG,YAAYkE,UAAU,uBAAhC,yCAGJ,0BACIvE,KAAK,SACLuE,UAAU,oCAFd,UAII,oBAAGA,UAAU,gBACb,uDC1KXwE,GAAW,CACpBC,OAAQ,iBACRC,SAAU,IACVC,KAAM,IACNC,MAAO,MACPC,MAAO,MACPC,KAAM,SACNC,IAAK,SACLC,OAAQ,SACRC,KAAM,QACNC,KAAM,OACNnH,MAAO,SACPoH,gBAAiB,+BACjBC,SAAU,SAAAC,GAAK,8BAAkBA,EAAlB,OCRNC,I,OAAY,WAErB,IAAM/G,EAAWc,cAQjB,OACI,yBAAQW,UAAU,sBAAsBoB,QAN1B,WACd7C,EAASP,KACTO,EAASgD,OAIT,SACI,oBAAGvB,UAAU,oBCbZuF,GAAiB,WAC1B,IAAMhH,EAAWc,cAMjB,OACI,0BAAQW,UAAU,4BAA4BoB,QAL7B,WACjB7C,EVsDJ,uCAAO,WAAMA,EAAS0F,GAAf,mBAAA5D,EAAA,6DACIvE,EAAMmI,IAAWvI,SAASR,YAA1BY,GADJ,kBAGoBuB,EAAc,UAAD,OAAWvB,GAAK,GAAG,UAHpD,cAGOwE,EAHP,gBAIoBA,EAAKC,OAJzB,QAIOrD,EAJP,QAKUsD,GACLjC,EAASL,KAET2C,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SARlC,kDAWCgD,QAAQC,IAAR,MAXD,0DAAP,0DUlDI,UACI,oBAAGhE,UAAU,iBACb,uD,OCCZrC,IAAO6H,OAAO,MACd,IAAMC,GAAYC,aAAgB/H,KAErBgI,GAAiB,WAE1B,IAAO/E,EAAOO,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAlC4E,IAEDrC,EAAWc,cACjB,EAA8B8B,aAAY,SAAA5F,GAAK,OAAIA,EAAMG,YAAlDT,EAAP,EAAOA,OAAQC,EAAf,EAAeA,YACf,EAAgC0D,mBAASrB,aAAaC,QAAQ,aAAe,SAA7E,mBAAOoI,EAAP,KAAiBC,EAAjB,KAEA1C,qBAAU,WACN5E,EXsDJ,uCAAO,WAAMA,GAAN,mBAAA8B,EAAA,+EAEoBhD,EAAc,UAFlC,cAEOiD,EAFP,gBAGoBA,EAAKC,OAHzB,OAGOrD,EAHP,OAIOjC,EAASwC,EAAgBP,EAAK4I,SACpCvH,EAASJ,EAAYlD,IALtB,kDAOC8I,QAAQC,IAAR,MAPD,0DAAP,yDWrDG,CAACzF,IAgCJ,OACI,uBAAKyB,UAAU,kBAAf,UACI,eAAC,GAAD,IACA,eAAC,KAAD,CACIyF,UAAWA,GACXxK,OAAQA,EACR8K,cAAc,QACdC,YAAY,MACZxB,SAAWA,GACXyB,gBAtBa,SAAElI,EAAMF,EAAOH,EAAKwI,GASzC,MAAO,CACH3C,MARU,CACV4C,gBAAmBvF,IAAO7C,EAAMM,KAAK8F,IAAO,UAAY,UACxDiC,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,aAgBHC,cApCU,SAAC3K,GACnB0C,EXFgC,CACpC9C,KAAMX,EACNa,QWA4BE,KAoChB4K,OAjCS,SAAC5K,GAClBgK,EAAYhK,GACZ0B,aAAakD,QAAQ,WAAY5E,IAgCzB6K,mBA1CU,SAAC7K,GACnB0C,EAASgD,OA0CDoF,aA9BS,SAAC9K,GAClB0C,EAASP,MA8BD4I,YAAa,EACbC,KAAQjB,EACRkB,WAAa,CACT/I,MAAOsD,MAEX,eAAC,GAAD,IACA,eAAC,GAAD,IACEnG,GAAe,eAAC,GAAD,Q,4CC7EpB6L,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAKF,OAFA5J,aAAakD,QAAQ,WAAW0G,EAAKC,SAASC,UAG1C,eAAC,IAAD,2BAAWF,GAAX,IACQD,UAAW,SAACI,GAAD,OACNN,EACM,eAACC,EAAD,eAAeK,IACf,eAAC,IAAD,CAAUC,GAAG,gB,mCCd3BC,GAAc,SAAC,GAIrB,IAHHR,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBACF,OACI,eAAC,IAAD,2BAAWA,GAAX,IACQD,UAAW,SAACI,GAAD,OACLN,EAEK,eAAC,IAAD,CAAUO,GAAG,MADb,eAACN,EAAD,eAAeK,SCJ7BG,GAAY,WAErB,IAAMlJ,EAAWc,cACjB,EAAwB8B,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAA5ChB,EAAP,EAAOA,SAAU4F,EAAjB,EAAiBA,IASjB,OALAuC,qBAAU,WACN5E,Eb2CJ,uCAAO,WAAMA,GAAN,iBAAA8B,EAAA,sEACgBhD,EAAc,cAD9B,cACGiD,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIKsD,IACJjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDpC,EAASH,EAAM,CACXwC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAGfX,EAASG,KAbV,2CAAP,yDa1CG,CAACH,IAGDvD,EACS,2CAIZ,eAAC,IAAD,UACE,+BACE,gBAAC,IAAD,WACI,eAAC,GAAD,CACI0M,OAAK,EACLC,KAAK,SACLT,UAAW9H,GACX4H,kBAAoBpG,IACxB,eAAC,GAAD,CACI8G,OAAK,EACLC,KAAK,IACLT,UAAWvB,GACXqB,kBAAoBpG,IACxB,eAAC,IAAD,CAAU2G,GAAG,cClCZK,GAAc,WACvB,OACI,eAAC,IAAD,CAAUvL,MAAQA,EAAlB,SACI,eAAC,GAAD,O,OCHZwL,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.59cd4572.chunk.js","sourcesContent":["export const types = {\r\n    uiOpenModal:  '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventAddNew:     '[event] Add new',\r\n    eventStartAddNew:'[event] Start add new',\r\n    eventSetActive:  '[event] Set active',\r\n    eventClearActive:'[event] Clear active',\r\n    eventUpdated: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventLogout: '[event] Events purged', \r\n\r\n    authCheckingFinished: '[auth] Checking login state finished',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state= initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        case types.authCheckingFinished:\r\n            return{\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return{\r\n                checking: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","// import moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños de mi gfecita',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2,'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'James Howlett'\r\n//     }\r\n// }\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n        case types.eventAddNew:\r\n            return{\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n        case types.eventUpdated:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n        case types.eventLoaded:\r\n            return{\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n        case types.eventLogout:\r\n            return{ \r\n                ...initialState\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) =>{\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            }\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { authReducer } from \"./authReducer\";\r\nimport { calendarReducer } from \"./calendarReducer\";\r\nimport { uiReducer } from \"./uiReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar : calendarReducer,\r\n    auth: authReducer\r\n})","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n);","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchSinToken = (endpoint, data, method = 'GET') =>{\r\n    const url = `${baseUrl}/${endpoint}`; \r\n    if(method === 'GET'){\r\n        return fetch(url);\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nconst fetchConToken = (endpoint, data, method = 'GET') =>{\r\n    const url = `${baseUrl}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';\r\n    if(method === 'GET'){\r\n        return fetch(url,{\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    }else{\r\n        return fetch(url,{\r\n            method,\r\n            headers:{\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data )\r\n        });\r\n    }\r\n}\r\n\r\nexport {\r\n    fetchSinToken,\r\n    fetchConToken\r\n}","import moment from \"moment\";\r\n\r\nexport const transformEvents = (events = []) =>{\r\n    \r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate(),\r\n        })\r\n    );\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { transformEvents } from \"../helpers/transformEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = (event) =>{\r\n    return async(dispatch,getState)=>{\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events',event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id :uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event));\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event)=>({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\nexport const eventSetActive = (event)=>({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\nexport const eventClearActive = ()=>({type: types.eventClearActive});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`,event,'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventUpdated(event))\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = (event)=>({\r\n    type: types.eventUpdated,\r\n    payload: event\r\n});\r\n\r\nexport const eventStartDelete = () => {\r\n    return async(dispatch,getState) => {\r\n        const {id} = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`,{},'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            }else{\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = ()=>({type: types.eventDeleted});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async(dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = transformEvents(body.eventos);\r\n            dispatch(eventLoaded(events));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = ( events ) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({type: types.eventLogout});","import Swal from \"sweetalert2\";\r\nimport { fetchConToken, fetchSinToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\nexport const startLogin = (email, password) =>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchSinToken('auth',{email, password},'POST');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error' )\r\n        }\r\n    }\r\n}\r\n\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nexport const startLogout = () =>{\r\n    return (dispatch)=>{\r\n        localStorage.clear();\r\n        dispatch(eventLogout());\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nconst logout = () => ({type: types.authLogout});\r\n\r\nexport const startRegister = ( email, name, password )=>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchSinToken('auth/new',{email, name, password},'POST');\r\n        const body = await resp.json();\r\n\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            Swal.fire('Error',body.msg,'error' )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = ()=>{\r\n    return async(dispatch) =>{\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n        // console.log(body);\r\n        if(body.ok){\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        }else{\r\n            dispatch(checkingFinish());\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({ type: types.authCheckingFinished});\r\n\r\n","import { useState } from 'react';\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    // const initialForm = {\r\n    //     email: '',\r\n    //     passord: '',\r\n    // };\r\n    const dispatch = useDispatch();\r\n    \r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: '',\r\n        lPassword: ''\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        // rEmail: 'jessep@hotmail.com',\r\n        // rName: 'jesse p',\r\n        // rPassword1: '899634dd',\r\n        // rPassword2: '899634dd',\r\n        rEmail: '',\r\n        rName: '',\r\n        rPassword1: '',\r\n        rPassword2: '',\r\n    });\r\n\r\n    const {lEmail, lPassword} = formLoginValues;\r\n    \r\n    const { rEmail, rName, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e)=>{\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail,lPassword));\r\n    }\r\n    \r\n    const handleRegister = (e)=>{\r\n        e.preventDefault();\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\r\n        }\r\n        dispatch(startRegister(rEmail, rName, rPassword1));\r\n    }\r\n\r\n    return (\r\n            <div className=\"container login-container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6 login-form-1\">\r\n                        <h3>Ingreso</h3>\r\n                        <form onSubmit={handleLogin}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"lEmail\"\r\n                                    value={ lEmail }\r\n                                    onChange={ handleLoginInputChange }\r\n                                    />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"lPassword\"\r\n                                    value={ lPassword }\r\n                                    onChange={ handleLoginInputChange }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\"\r\n                                    className=\"btnSubmit\"\r\n                                    value=\"Login\" \r\n                                />\r\n                            </div>\r\n                        </form>\r\n                        <div className=\"helper\">\r\n                            <h5>\r\n                            Puedes crear una cuenta o logearte con una cuenta de prueba<br></br><br></br>\r\n                            </h5>\r\n                            <strong>Correo:</strong> walterw@hotmail.com <br/>\r\n                            <strong>Contraseña:</strong> 842hj34dd    \r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 login-form-2\">\r\n                        <h3>Registro</h3>\r\n                        <form onSubmit={handleRegister}>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"text\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Nombre\"\r\n                                    name=\"rName\"\r\n                                    value= { rName}\r\n                                    onChange={ handleRegisterInputChange }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Correo\"\r\n                                    name=\"rEmail\"\r\n                                    value= { rEmail}\r\n                                    onChange={ handleRegisterInputChange }\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Contraseña\"\r\n                                    name=\"rPassword1\"\r\n                                    value= { rPassword1}\r\n                                    onChange={ handleRegisterInputChange } \r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input\r\n                                    type=\"password\"\r\n                                    className=\"form-control\"\r\n                                    placeholder=\"Repita la contraseña\"\r\n                                    name=\"rPassword2\"\r\n                                    value= { rPassword2}\r\n                                    onChange={ handleRegisterInputChange } \r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"submit\" \r\n                                    className=\"btnSubmit\" \r\n                                    value=\"Crear cuenta\" />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLogout } from '../../actions/auth';\r\n\r\n\r\nexport const Navbar = () => {\r\n\r\n    const {name} = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () =>{\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-5\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button className=\"btn btn-outline-danger\" onClick={handleLogout}>\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user} = event;\r\n    return (\r\n        <div>\r\n            <strong>{ title }</strong>\r\n            <span> -{ user.name }</span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal  = () => ({ type: types.uiOpenModal })\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import React, { useEffect, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)',\r\n    },\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1,'hour');\r\nconst nowEnd = now.clone().add(2, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowEnd.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const {modalOpen} = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowEnd.toDate());\r\n\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const {title, notes, start, end} = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent)\r\n        }else{\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n    const handleInputChange = ({target}) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name] : target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActive())\r\n        setFormValues(initEvent);        \r\n    }\r\n\r\n    const handleStartDateChange = (e) =>{\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e)=>{\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n        // console.table(formValues);\r\n        if (momentStart.isSameOrAfter(momentEnd)) {\r\n            return Swal.fire('Error', 'La fecha fin debe ser diferente a la fecha de inicio', 'error')\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        }else{\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n            <Modal\r\n                isOpen={modalOpen}\r\n                // onAfterOpen={afterOpenModal}\r\n                onRequestClose={closeModal}\r\n                style={customStyles}\r\n                closeTimeoutMS={200}\r\n                className=\"modal\"\r\n                overlayClassName=\"modal-fondo\"\r\n            >\r\n                <h1> {(activeEvent)? 'Editar Evento': 'Nuevo Evento'} </h1>\r\n                <hr />\r\n                <form className=\"container\" onSubmit={handleSubmitForm}>\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora inicio</label>\r\n                        <DateTimePicker\r\n                            onChange={handleStartDateChange}\r\n                             value={dateStart}\r\n                             className= \"form-control\"\r\n                          />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Fecha y hora fin</label>\r\n                        <DateTimePicker\r\n                            onChange={handleEndDateChange}\r\n                             value={dateEnd}\r\n                             minDate= {dateStart}\r\n                             className= \"form-control\"\r\n                          />\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"form-group\">\r\n                        <label>Titulo y notas</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                            placeholder=\"Título del evento\"\r\n                            name=\"title\"\r\n                            value = {title}\r\n                            onChange={handleInputChange}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <textarea\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            placeholder=\"Notas\"\r\n                            rows=\"5\"\r\n                            value = {notes}\r\n                            onChange={handleInputChange}\r\n                            name=\"notes\"\r\n                        ></textarea>\r\n                        <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                    </div>\r\n\r\n                    <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-outline-primary btn-block\"\r\n                    >\r\n                        <i className=\"far fa-save\"></i>\r\n                        <span> Guardar</span>\r\n                    </button>\r\n\r\n                </form>\r\n            </Modal>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventClearActive } from '../../actions/events';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    // const {modalOpen} = useSelector(state => state.ui);\r\n\r\n    const openModal = () =>{\r\n        dispatch(eventClearActive());\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-primary fab\" onClick={openModal}>\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { eventStartDelete } from '../../actions/events'\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleDelete = () => {\r\n        dispatch(eventStartDelete());\r\n    }\r\n\r\n    return (\r\n        <button className=\"btn btn-danger fab-danger\" onClick={handleDelete}>\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar Evento</span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Navbar } from '../ui/Navbar';\r\nimport {Calendar, momentLocalizer} from 'react-big-calendar'\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {messages} from '../../helpers/calendar-messages-es'\r\nimport moment from 'moment';\r\nimport 'moment/locale/es'\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\n\r\nmoment.locale('es');\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const {uid} = useSelector(state => state.auth);\r\n\r\n    const dispatch = useDispatch();\r\n    const {events, activeEvent} = useSelector(state => state.calendar);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const onSelectSlot = (e)=>{\r\n        dispatch(eventClearActive())\r\n    }\r\n\r\n    const eventStyleGetter = ( event,start, end, isSelected) =>{\r\n        // console.log(event,start, end, isSelected);\r\n        const style = {\r\n            backgroundColor : (uid=== event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: '#ffffff'\r\n        }\r\n        return {\r\n            style\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar/>\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages= {messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onSelectEvent= { onSelectEvent }\r\n                onView= {onViewChange}\r\n                onDoubleClickEvent= {onDoubleClick}\r\n                onSelectSlot={ onSelectSlot}\r\n                selectable= {true}\r\n                view = {lastView}\r\n                components= {{\r\n                    event: CalendarEvent\r\n                }}/>\r\n                <CalendarModal/>\r\n                <AddNewFab/>\r\n                { activeEvent && <DeleteEventFab/> }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    // console.log(rest.location.pathname);\r\n    localStorage.setItem('lastPath',rest.location.pathname);\r\n\r\n    return (\r\n        <Route {...rest}\r\n                component={(props) =>( \r\n                    (isAuthenticated)\r\n                        ? (<Component {...props}/>)\r\n                        : (<Redirect to=\"/login\"/>)\r\n                )}/>            \r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Redirect, Route } from 'react-router-dom'\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    return (\r\n        <Route {...rest}\r\n                component={(props) =>( \r\n                    (!isAuthenticated)\r\n                        ? (<Component {...props}/>)\r\n                        : (<Redirect to=\"/\"/>)\r\n                )}/>            \r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { BrowserRouter as Router, Switch, Redirect} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const {checking, uid} = useSelector(state => state.auth);\r\n\r\n    // console.log(checking, uid);\r\n\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n\r\n    if(checking){\r\n        return (<h5> Wait...</h5>)\r\n    }\r\n\r\n    return (\r\n    <Router>\r\n      <div>\r\n        <Switch>\r\n            <PublicRoute\r\n                exact\r\n                path=\"/login\"\r\n                component={LoginScreen}\r\n                isAuthenticated={ !!uid }/>\r\n            <PrivateRoute\r\n                exact\r\n                path=\"/\"\r\n                component={CalendarScreen}\r\n                isAuthenticated={ !!uid }/>\r\n            <Redirect to=\"/\" />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter'\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter/>\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}